<Window x:Class="REghZyAccountManagerV6.Views.MainView.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:REghZyAccountManagerV6.Views.MainView"
        xmlns:app="clr-namespace:REghZyAccountManagerV6"
        xmlns:controls="clr-namespace:REghZyAccountManagerV6.Accounting.Controls"
        xmlns:converters="clr-namespace:REghZyAccountManagerV6.Converters"
        xmlns:utils="clr-namespace:REghZyAccountManagerV6.Utils"
        xmlns:ap="clr-namespace:REghZyAccountManagerV6.AttachedProperties" 
        xmlns:ctrls="clr-namespace:REghZyAccountManagerV6.Controls"
        d:DataContext="{d:DesignInstance Type=local:MainViewModel}"
        mc:Ignorable="d"
        Title="MainWindow" 
        Width="1280" 
        Height="760"
        MinWidth="750"
        MinHeight="525"
        Style="{DynamicResource CustomWindowStyle}"
        DataContext="{x:Static app:ViewModelLocator.MainView}" 
        Background="{DynamicResource AREghZyBrush.Deep.3.Background.Static}">
    <Window.InputBindings>
        <KeyBinding Command="{Binding FocusFindCommand, Mode=OneTime}" Modifiers="Ctrl" Key="F"/>
    </Window.InputBindings>
    <Window.Resources>
        <converters:BoolToStringConverter x:Key="BoolToStringConverter" />
    </Window.Resources>
    <Grid>
        <Menu VerticalAlignment="Top">
            <MenuItem Header="File">
                <MenuItem Header="Preferences..." Command="{Binding Source={x:Static app:ServiceLocator.Settings}, Path=OpenViewCommand, Mode=OneTime}">
                    <MenuItem.Icon>
                        <Image Source="/REghZyAccountManagerV6;component/Resources/preferencesIcon.png"/>
                    </MenuItem.Icon>
                </MenuItem>
            </MenuItem>
        </Menu>
        <Grid Margin="10,18,0,10">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="220" MinWidth="200"/>
                <ColumnDefinition Width="10"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <ContentControl Height="40" VerticalAlignment="Top">
                <TextBlock Text="Account Panel" VerticalAlignment="Center" HorizontalAlignment="Center" FontSize="14" TextDecorations="Underline"/>
            </ContentControl>
            <ContentControl Height="40" VerticalAlignment="Top" Grid.Column="2">
                <TextBlock Text="Account list and editor" VerticalAlignment="Center" HorizontalAlignment="Center" FontSize="14" TextDecorations="Underline"/>
            </ContentControl>
            <GridSplitter Grid.Column="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="Transparent"/>
            <Grid Grid.Column="2" Margin="0,40,0,0">
                <Grid Height="40" VerticalAlignment="Bottom" DataContext="{Binding Panel, Mode=OneTime}" Margin="0,0,10,0">
                    <TextBlock HorizontalAlignment="Left" Width="95" VerticalAlignment="Center" TextAlignment="Center"><Run Text="Move selected"/><LineBreak/><Run Text="account position"/></TextBlock>
                    <Button Command="{Binding MoveItemUpCommand, Mode=OneTime}" HorizontalAlignment="Left" VerticalAlignment="Stretch" Content="UP" Margin="100,0,0,0" Width="55"/>
                    <Button Command="{Binding MoveItemDownCommand, Mode=OneTime}" HorizontalAlignment="Left" VerticalAlignment="Stretch" Content="DOWN" Margin="160,0,0,0" Width="55"/>
                    <Button Command="{Binding MoveItemToTop, Mode=OneTime}" HorizontalAlignment="Left" VerticalAlignment="Stretch" Content="To Top" Margin="220,0,0,0" Width="75"/>
                    <Button Command="{Binding MoveItemToBottom, Mode=OneTime}" HorizontalAlignment="Left" VerticalAlignment="Stretch" Content="To Bottom" Margin="300,0,0,0" Width="75"/>
                    <StackPanel HorizontalAlignment="Right" VerticalAlignment="Center" DataContext="{x:Static app:ViewModelLocator.AccountCollection}" Margin="0,0,0,0">
                        <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center" Padding="2" FontSize="13"><Run Text="{Binding Accounts.Count, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}"/><Run Text=" Accounts"/></TextBlock>
                        <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center" Padding="2" FontSize="13"><Run Text="{Binding SaveQueueCount, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}"/><Run Text=" Queued for save"/></TextBlock>
                    </StackPanel>

                    <ctrls:NumberSelector x:Name="Ok" NormalIncrement="4" Minimum="50" Maximum="65" Value="55" Margin="380,0,0,0" HorizontalAlignment="Left" Width="100" Height="24" VerticalAlignment="Bottom"/>
                    <TextBlock Text="{Binding ElementName=Ok, Path=Value, UpdateSourceTrigger=PropertyChanged}" Margin="485,0,0,0" HorizontalAlignment="Left" Width="100" Height="24" VerticalAlignment="Bottom"/>
                </Grid>
                <Grid Margin="0,0,0,50" DataContext="{Binding Collection, Mode=OneTime}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="10"/>
                        <ColumnDefinition Width="{Binding Path=EditorWidth, Source={x:Static app:ViewModelLocator.AccountEditor}, UpdateSourceTrigger=PropertyChanged}"
                                          x:Name="EditorColumn" 
                                          MaxWidth="750"/>
                    </Grid.ColumnDefinitions>
                    <Grid x:Name="EditorView" Grid.Column="2" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Margin="0,0,10,0">
                        <Grid DataContext="{Binding SelectedAccount, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
                            <Grid Height="217" VerticalAlignment="Top">
                                <ctrls:DoubleClickEditBox Text="{Binding AccountName, FallbackValue=BINDING_ERROR_ACCNAME, UpdateSourceTrigger=PropertyChanged}" 
                                    HorizontalContentAlignment="Center"
                                    VerticalAlignment="Top" 
                                    VerticalContentAlignment="Center" 
                                    Background="Transparent" 
                                    BorderBrush="Transparent" 
                                    FontSize="16"
                                    Height="32"
                                    ToolTip="Double click to edit..." 
                                    FontWeight="Bold"/>
                                <Grid Margin="0,0,0,148" Height="32" VerticalAlignment="Bottom">
                                    <Label VerticalContentAlignment="Center" FontSize="14" Content="Email" HorizontalAlignment="Left" Width="80"/>
                                    <TextBox utils:HorizontalScrolling.UseHorizontalScrolling="True" FontSize="14" Text="{Binding Email, UpdateSourceTrigger=PropertyChanged}" Margin="80,0,60,0" Padding="2" VerticalContentAlignment="Center" ToolTip="{Binding Email, UpdateSourceTrigger=PropertyChanged}"/>
                                    <Button Content="Copy" FontSize="14" Command="{Binding CopyToClipboardCommand, Mode=OneTime}" CommandParameter="e" BorderThickness="0 1 1 1" HorizontalAlignment="Right" Width="60" Background="{DynamicResource AREghZyBrush.Primary.1.Border.Static}" BorderBrush="{DynamicResource AREghZyBrush.Primary.1.Border.Static}"/>
                                </Grid>
                                <Grid Margin="0,0,0,111" Height="32" VerticalAlignment="Bottom">
                                    <Label VerticalContentAlignment="Center" FontSize="14" Content="Username" HorizontalAlignment="Left" Width="80"/>
                                    <TextBox utils:HorizontalScrolling.UseHorizontalScrolling="True" FontSize="14" Text="{Binding Username, UpdateSourceTrigger=PropertyChanged}" Margin="80,0,60,0" Padding="2" VerticalContentAlignment="Center" ToolTip="{Binding Username, UpdateSourceTrigger=PropertyChanged}"/>
                                    <Button Content="Copy" FontSize="14" Command="{Binding CopyToClipboardCommand, Mode=OneTime}" CommandParameter="u" BorderThickness="0 1 1 1" HorizontalAlignment="Right" Width="60" Background="{DynamicResource AREghZyBrush.Primary.1.Border.Static}" BorderBrush="{DynamicResource AREghZyBrush.Primary.1.Border.Static}"/>
                                </Grid>
                                <Grid Margin="0,0,0,74" Height="32" VerticalAlignment="Bottom">
                                    <Label VerticalContentAlignment="Center" FontSize="14" Content="Password" HorizontalAlignment="Left" Width="80"/>
                                    <TextBox utils:HorizontalScrolling.UseHorizontalScrolling="True" FontSize="14" Text="{Binding Password, UpdateSourceTrigger=PropertyChanged}" Margin="80,0,60,0" Padding="2" VerticalContentAlignment="Center" ToolTip="{Binding Password, UpdateSourceTrigger=PropertyChanged}"/>
                                    <Button Content="Copy" FontSize="14" Command="{Binding CopyToClipboardCommand, Mode=OneTime}" CommandParameter="p" BorderThickness="0 1 1 1" HorizontalAlignment="Right" Width="60" Background="{DynamicResource AREghZyBrush.Primary.1.Border.Static}" BorderBrush="{DynamicResource AREghZyBrush.Primary.1.Border.Static}"/>
                                </Grid>
                                <Grid Margin="0,0,0,37" Height="32" VerticalAlignment="Bottom">
                                    <Label VerticalContentAlignment="Center" FontSize="14" Content="D.O.B" HorizontalAlignment="Left" Width="80"/>
                                    <TextBox utils:HorizontalScrolling.UseHorizontalScrolling="True" FontSize="14" Text="{Binding DateOfBirth, UpdateSourceTrigger=PropertyChanged}" Margin="80,0,60,0" Padding="2" VerticalContentAlignment="Center" ToolTip="{Binding DateOfBirth, UpdateSourceTrigger=PropertyChanged}"/>
                                    <Button Content="Copy" FontSize="14" Command="{Binding CopyToClipboardCommand, Mode=OneTime}" CommandParameter="dob" BorderThickness="0 1 1 1" HorizontalAlignment="Right" Width="60" Background="{DynamicResource AREghZyBrush.Primary.1.Border.Static}" BorderBrush="{DynamicResource AREghZyBrush.Primary.1.Border.Static}"/>
                                </Grid>
                                <Grid Height="32" VerticalAlignment="Bottom">
                                    <Label VerticalContentAlignment="Center" FontSize="14" Content="Security" HorizontalAlignment="Left" Width="80"/>
                                    <TextBox utils:HorizontalScrolling.UseHorizontalScrolling="True" FontSize="14" Text="{Binding SecurityInfo, UpdateSourceTrigger=PropertyChanged}" Margin="80,0,60,0" Padding="2" VerticalContentAlignment="Center" ToolTip="{Binding SecurityInfo, UpdateSourceTrigger=PropertyChanged}"/>
                                    <Button Content="Copy" FontSize="14" Command="{Binding CopyToClipboardCommand, Mode=OneTime}" CommandParameter="si" BorderThickness="0 1 1 1" HorizontalAlignment="Right" Width="60" Background="{DynamicResource AREghZyBrush.Primary.1.Border.Static}" BorderBrush="{DynamicResource AREghZyBrush.Primary.1.Border.Static}"/>
                                </Grid>
                            </Grid>
                            <Separator VerticalAlignment="Top" Margin="10,227,0,0" Background="{DynamicResource AREghZyBrush.Primary.2.Border.Static}"/>
                            <Grid Margin="0,233,0,0">
                                <Label Content="Custom Information" VerticalAlignment="Top" HorizontalContentAlignment="Center"/>
                                <Grid Margin="0,31,0,0" DataContext="{Binding ExtraInfo, Mode=OneTime}">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="27"/>
                                        <RowDefinition Height="1*"/>
                                    </Grid.RowDefinitions>
                                    <TextBox Text="{Binding ToAdd, UpdateSourceTrigger=PropertyChanged}"
                                             Tag="Add custom data here..." BorderThickness="1 1 1 1" 
                                             VerticalContentAlignment="Center" Margin="0,0,190,0" Padding="3 1 1 1" 
                                             Background="{DynamicResource AREghZyBrush.Primary.1.Background.Static}"
                                             BorderBrush="{DynamicResource AREghZyBrush.Primary.2.Border.Static}"
                                             Style="{StaticResource HintedTextBox}">
                                        <TextBox.InputBindings>
                                            <KeyBinding Command="{Binding AddItemCommand, Mode=OneTime}" Key="Enter"/>
                                        </TextBox.InputBindings>
                                    </TextBox>
                                    <Border Margin="0,26,150,0" BorderThickness="1 0" 
                                            BorderBrush="{DynamicResource AREghZyBrush.Primary.1.Border.Static}"
                                            Background="{DynamicResource AREghZyBrush.Deep.3.Background.Static}" Visibility="Collapsed"/>
                                    <Button Command="{Binding AddItemCommand, Mode=OneTime}" Content="Add" Margin="0,0,125,0" BorderThickness="0 1 0 1" HorizontalAlignment="Right" Width="65" BorderBrush="{DynamicResource AREghZyBrush.Primary.2.Border.Static}" ToolTip="Adds the text (on the left) into the list below"/>
                                    <Button Command="{Binding RemoveItemCommand, Mode=OneTime}" Content="Remove" BorderThickness="1 1 0 1" HorizontalAlignment="Right" Width="70" BorderBrush="{DynamicResource AREghZyBrush.Primary.2.Border.Static}" Margin="0,0,55,0" ToolTip="Removes the selected element below"/>
                                    <Button Command="{Binding PasteItemCommand, Mode=OneTime}" Content="Paste" BorderThickness="1 1 1 1" HorizontalAlignment="Right" Width="55" BorderBrush="{DynamicResource AREghZyBrush.Primary.2.Border.Static}" ToolTip="Adds the text (in your clipboard) into the list below"/>
                                    <ListBox Grid.Row="1" 
                                             BorderBrush="{DynamicResource AREghZyBrush.Primary.2.Border.Static}"
                                             Background="{DynamicResource AREghZyBrush.Deep.3.Background.Static}"
                                             BorderThickness="1 0 1 1" 
                                             ItemsSource="{Binding ExtraInformation, Mode=OneTime}"
                                             SelectedItem="{Binding SelectedItem, UpdateSourceTrigger=PropertyChanged}"
                                             HorizontalContentAlignment="Stretch"
                                             ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                                             ToolTip="A list of extra/custom data you can associate with this account. Double click to edit existing items (similar to renaming files in windows). The text editor may be slightly glitchy with lots of continuous characters without whitespaces, due to text wrapping">
                                        <ListBox.ItemTemplate>
                                            <DataTemplate>
                                                <Grid Background="Transparent">
                                                    <Grid.InputBindings>
                                                        <KeyBinding Key="C" Modifiers="Ctrl" Command="{Binding CopyToClipboard, Mode=OneTime}"/>
                                                    </Grid.InputBindings>
                                                    <ctrls:DoubleClickEditBox x:Name="DCEB" VerticalAlignment="Bottom" Height="27" Grid.Row="0" Text="{Binding Value, UpdateSourceTrigger=PropertyChanged}" MinHeight="30" Margin="-5,-2,47,-2"/>
                                                    <Button Content="Copy" Command="{Binding CopyToClipboard, Mode=OneTime}" Margin="0,0,-3,0" HorizontalAlignment="Right" Width="49"/>
                                                </Grid>
                                            </DataTemplate>
                                        </ListBox.ItemTemplate>
                                    </ListBox>
                                </Grid>
                            </Grid>
                        </Grid>
                    </Grid>
                    <!--
                    <ctrls:AutoClosingGridSplitter HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="Transparent" Grid.Column="1"
                               MinSizeForAutoClose="350"
                               TargetDefinition="{Binding ., ElementName=EditorColumn}"
                               IsOpen="{Binding IsEditorOpen, Source={x:Static app:ViewModelLocator.AccountPanel}, UpdateSourceTrigger=PropertyChanged}"/>
                    -->
                    <GridSplitter HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="Transparent" Grid.Column="1"
                                  MouseDoubleClick="GridSplitter_MouseDoubleClick"/>
                    <Grid>
                        <Border Background="{DynamicResource AREghZyBrush.Deep.3.Background.Static}" BorderThickness="1" 
                                BorderBrush="{DynamicResource AREghZyBrush.Deep.2.Border.Static}">
                            <ListBox ScrollViewer.CanContentScroll="False"
                                     utils:HorizontalScrolling.UseHorizontalScrolling="True"
                                     utils:HorizontalScrolling.HorizontalScrollAmount="3"
                                     HorizontalContentAlignment="Stretch"
                                     ItemsSource="{Binding Accounts, UpdateSourceTrigger=PropertyChanged}"
                                     SelectedItem="{Binding SelectedAccount, UpdateSourceTrigger=PropertyChanged}" 
                                     SelectedIndex="{Binding SelectedIndex, UpdateSourceTrigger=PropertyChanged}"
                                     Background="{DynamicResource AREghZyBrush.Deep.2.Background.Static}"
                                     DragEnter="ListBox_DragEnter"
                                     DragLeave="ListBox_DragLeave"
                                     Drop="ListBox_Drop"
                                     AllowDrop="True"
                                     x:Name="AccountListBox">
                                <ListBox.ItemTemplate>
                                    <DataTemplate>
                                        <controls:LargeAccountControl DataContext="{Binding}" ContextMenu="{DynamicResource DeletableAccountContextMenu}">
                                            <controls:LargeAccountControl.InputBindings>
                                                <MouseBinding Gesture="LeftDoubleClick" Command="{Binding SelectCommand, Mode=OneTime}"/>
                                            </controls:LargeAccountControl.InputBindings>
                                        </controls:LargeAccountControl>
                                    </DataTemplate>
                                </ListBox.ItemTemplate>
                            </ListBox>
                        </Border>
                    </Grid>
                </Grid>
            </Grid>
            <Grid DataContext="{Binding Panel, Mode=OneTime}" Margin="0,40,0,0">
                <Button Command="{Binding CreateNewAccountCommand, Mode=OneTime}" VerticalAlignment="Top" Height="50">
                    <StackPanel Orientation="Horizontal">
                        <Image Width="32" Height="32" Margin="0 0 10 0" Source="/REghZyAccountManagerV6;component/Resources/addAccountIcon.png"/>
                        <TextBlock Text="Create New Account" VerticalAlignment="Center"/>
                    </StackPanel>
                </Button>
                <Button Command="{Binding DeleteSelectedAccountCommand, Mode=OneTime}" VerticalAlignment="Top" Height="50" Margin="55,55,0,0">
                    <StackPanel Orientation="Horizontal">
                        <Image Width="32" Height="32" Margin="0 0 10 0" Source="/REghZyAccountManagerV6;component/Resources/deleteAccountIcon.png"/>
                        <TextBlock Text="Delete Selected" VerticalAlignment="Center"/>
                    </StackPanel>
                </Button>
                <Button Command="{Binding UndoLastDeletionCommand, Mode=OneTime}" Content="Undo" HorizontalContentAlignment="Center" Margin="0,55,0,0" 
                        IsEnabled="{Binding Path=CanUndo, Source={x:Static app:ViewModelLocator.AccountCollection}, UpdateSourceTrigger=PropertyChanged}" 
                        Height="50" VerticalAlignment="Top" HorizontalAlignment="Left" Width="50"/>
                <ToggleButton IsChecked="{Binding IsEditorOpen, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Top" Height="50" Margin="0,110,0,0">
                    <StackPanel Orientation="Horizontal" Margin="0 0 32 0">
                        <Image Width="32" Height="32" Margin="0 0 10 0" Source="/REghZyAccountManagerV6;component/Resources/editAccountIcon.png"/>
                        <TextBlock Text="{Binding IsEditorOpen, Converter={StaticResource BoolToStringConverter}, ConverterParameter=Close Editor|Open Editor}" VerticalAlignment="Center"/>
                    </StackPanel>
                </ToggleButton>
                <Separator Height="1" Margin="0,165,0,0" VerticalAlignment="Top" />
                <Grid Margin="0,171,0,0" DataContext="{Binding Finder, Mode=OneTime}">
                    <TextBox VerticalAlignment="Top" Height="29" VerticalContentAlignment="Center"
                             Padding="4 1" BorderThickness="1 1 1 1" Margin="0,0,29,0" 
                             Background="{DynamicResource AREghZyBrush.Primary.1.Background.Static}"
                             Text="{Binding Input, UpdateSourceTrigger=PropertyChanged}"
                             x:Name="FindInputBox" utils:HorizontalScrolling.UseHorizontalScrolling="True" 
                             BorderBrush="{DynamicResource AREghZyBrush.Primary.2.Border.Static}"
                             Tag="Search for an account here..."
                             ToolTip="Type a part of an account, to try and search for it. There are extra options in the drop down above"
                             Style="{StaticResource HintedTextBox}">
                        <TextBox.InputBindings>
                            <KeyBinding Key="Enter" Command="{Binding FocusListCommand, Mode=OneTime}"/>
                            <KeyBinding Key="Tab" Command="{Binding FocusListCommand, Mode=OneTime}"/>
                        </TextBox.InputBindings>
                    </TextBox>
                    <ToggleButton Height="29" VerticalAlignment="Top" HorizontalAlignment="Right" Width="29" BorderThickness="0 1 1 1"
                                  IsChecked="{Binding ElementName=SearchDetailsExpander, Path=IsExpanded, UpdateSourceTrigger=PropertyChanged}"
                                  ToolTip="Click for extra search details">
                        <Image Source="/REghZyAccountManagerV6;component/Resources/preferencesIcon.png" Margin="2"/>
                    </ToggleButton>
                    <ListBox x:Name="FindList" 
                             VerticalContentAlignment="Center" 
                             IsTabStop="False"
                             utils:HorizontalScrolling.UseHorizontalScrolling="True"
                             Margin="0,29,0,30" 
                             BorderThickness="1 0 1 1" 
                             HorizontalContentAlignment="Stretch"
                             ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                             BorderBrush="{DynamicResource AREghZyBrush.Primary.2.Border.Static}"
                             Background="{DynamicResource AREghZyBrush.Deep.3.Background.Static}"
                             ItemsSource="{Binding FoundAccounts, Mode=OneTime}"
                             SelectedItem="{Binding SelectedAccount, UpdateSourceTrigger=PropertyChanged}"
                             ToolTip="Contains all of the found accounts. Double click a found account to select it in the main account list"
                             FocusManager.IsFocusScope="True"
                             ap:ListBoxTabSelectNextElement.Use="True">
                        <ListBox.InputBindings>
                            <KeyBinding Key="Enter" Command="{Binding SelectedAccount.SelectCommand, Mode=OneWay}"/>
                        </ListBox.InputBindings>
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <controls:SmallAccountControl DataContext="{Binding}" ContextMenu="{DynamicResource AccountContextMenu}">
                                    <controls:SmallAccountControl.InputBindings>
                                        <MouseBinding Gesture="LeftDoubleClick" Command="{Binding SelectCommand, Mode=OneTime}"/>
                                        <KeyBinding Key="Enter" Command="{Binding SelectCommand, Mode=OneTime}"/>
                                    </controls:SmallAccountControl.InputBindings>
                                </controls:SmallAccountControl>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                    <Button VerticalAlignment="Bottom" Height="30" Content="Clear" 
                            BorderThickness="1 0 1 1"
                            BorderBrush="{DynamicResource AREghZyBrush.Primary.2.Border.Static}"
                            Command="{Binding ClearResultsCommand, Mode=OneTime}"/>
                    <Expander VerticalAlignment="Top" VerticalContentAlignment="Center" Header="Search Options" HorizontalAlignment="Left" Width="181"
                              ExpandDirection="Down" FlowDirection="RightToLeft" Margin="39,29,0,0"
                              x:Name="SearchDetailsExpander">
                        <Expander.Style>
                            <Style TargetType="{x:Type Expander}">
                                <Setter Property="Foreground" Value="{DynamicResource AREghZyBrush.Foreground.Static}" />
                                <Setter Property="Background" Value="Transparent" />
                                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                <Setter Property="VerticalContentAlignment" Value="Stretch" />
                                <Setter Property="BorderBrush" Value="Transparent" />
                                <Setter Property="BorderThickness" Value="1" />
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type Expander}">
                                            <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="3" SnapsToDevicePixels="true">
                                                <DockPanel>
                                                    <ToggleButton x:Name="HeaderSite" ContentTemplate="{TemplateBinding HeaderTemplate}"  
                                                                  DockPanel.Dock="Top" 
                                                                  Foreground="{TemplateBinding Foreground}" FontWeight="{TemplateBinding FontWeight}" 
                                                                  FocusVisualStyle="{StaticResource ExpanderHeaderFocusVisual}" FontStyle="{TemplateBinding FontStyle}" 
                                                                  FontStretch="{TemplateBinding FontStretch}" FontSize="{TemplateBinding FontSize}" 
                                                                  FontFamily="{TemplateBinding FontFamily}" 
                                                                  HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                                                  IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" 
                                                                  Margin="-1,-29,150,1" MinWidth="0" MinHeight="0" 
                                                                  VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" Height="29"
                                                                  BorderBrush="Transparent" Background="Transparent" BorderThickness="0" Visibility="Collapsed">
                                                    </ToggleButton>
                                                    <ContentPresenter x:Name="ExpandSite" DockPanel.Dock="Bottom" Focusable="false" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" Visibility="Collapsed" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                                </DockPanel>
                                            </Border>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsExpanded" Value="true">
                                                    <Setter Property="Visibility" TargetName="ExpandSite" Value="Visible" />
                                                </Trigger>
                                                <Trigger Property="ExpandDirection" Value="Right">
                                                    <Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Right" />
                                                    <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Left" />
                                                    <Setter Property="Style" TargetName="HeaderSite" Value="{StaticResource ExpanderRightHeaderStyle}" />
                                                </Trigger>
                                                <Trigger Property="ExpandDirection" Value="Up">
                                                    <Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Top" />
                                                    <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Bottom" />
                                                    <Setter Property="Style" TargetName="HeaderSite" Value="{StaticResource ExpanderUpHeaderStyle}" />
                                                </Trigger>
                                                <Trigger Property="ExpandDirection" Value="Left">
                                                    <Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Left" />
                                                    <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Right" />
                                                    <Setter Property="Style" TargetName="HeaderSite" Value="{StaticResource ExpanderLeftHeaderStyle}" />
                                                </Trigger>
                                                <Trigger Property="IsEnabled" Value="false">
                                                    <Setter Property="Foreground" Value="{DynamicResource AREghZyBrush.Foreground.Disabled}" />
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Expander.Style>
                        <Border Background="{DynamicResource AREghZyBrush.Deep.2.Background.Static}">
                            <Border.BitmapEffect>
                                <DropShadowBitmapEffect ShadowDepth="1"/>
                            </Border.BitmapEffect>
                            <StackPanel Margin="5"  FlowDirection="LeftToRight">
                                <Label Height="20" Padding="0" VerticalContentAlignment="Center" HorizontalContentAlignment="Center">
                                    <TextBlock Text="Preferences"/>
                                </Label>
                                <CheckBox Content="Search contains" IsChecked="{Binding CheckContains, UpdateSourceTrigger=PropertyChanged}" 
                                          ToolTip="True to check any account that contains the search text, otherwise only if it starts with it"/>
                                <Separator Height="1"/>
                                <Label Height="20" Padding="0" VerticalContentAlignment="Center" HorizontalContentAlignment="Center">
                                    <TextBlock Text="Search Type"/>
                                </Label>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="42*"/>
                                        <ColumnDefinition Width="2"/>
                                        <ColumnDefinition Width="50*"/>
                                    </Grid.ColumnDefinitions>
                                    <Button Content="Select All"   Margin="0,1,0,1" Command="{Binding SelectAllCommand, Mode=OneTime}"/>
                                    <Button Content="Deselect All"   Margin="0,1,0,1" Grid.Column="2" Command="{Binding DeselectAllCommand, Mode=OneTime}"/>
                                </Grid>
                                <CheckBox Content="Account Name"   Margin="0,1,0,1" IsChecked="{Binding SearchAccountName, UpdateSourceTrigger=PropertyChanged}"/>
                                <CheckBox Content="Email"          Margin="0,1,0,1" IsChecked="{Binding SearchEmail, UpdateSourceTrigger=PropertyChanged}"/>
                                <CheckBox Content="Username"       Margin="0,1,0,1" IsChecked="{Binding SearchUsername, UpdateSourceTrigger=PropertyChanged}"/>
                                <CheckBox Content="Password"       Margin="0,1,0,1" IsChecked="{Binding SearchPassword, UpdateSourceTrigger=PropertyChanged}"/>
                                <CheckBox Content="Date of Birth"  Margin="0,1,0,1" IsChecked="{Binding SearchDateOfBirth, UpdateSourceTrigger=PropertyChanged}"/>
                                <CheckBox Content="Security Info"  Margin="0,1,0,1" IsChecked="{Binding SearchSecurityInfo, UpdateSourceTrigger=PropertyChanged}"/>
                                <CheckBox Content="Custom Info"    Margin="0,1,0,1" IsChecked="{Binding SearchExtraInfo, UpdateSourceTrigger=PropertyChanged}"/>
                            </StackPanel>
                        </Border>
                    </Expander>
                </Grid>
            </Grid>
        </Grid>
    </Grid>
</Window>
